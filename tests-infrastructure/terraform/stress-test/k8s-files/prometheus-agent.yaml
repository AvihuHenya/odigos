# Prometheus Agent
apiVersion: monitoring.coreos.com/v1alpha1
kind: PrometheusAgent
metadata:
  name: cluster-agent
  namespace: monitoring
spec:
  serviceAccountName: prometheus-agent
  serviceMonitorSelector:
    matchLabels:
      release: prometheus-agent
  podMonitorSelector:
    matchLabels:
      release: prometheus-agent
  serviceMonitorNamespaceSelector: {}
  podMonitorNamespaceSelector: {}
  probeSelector:
    matchLabels:
      release: prometheus-agent
  scrapeInterval: 15s
  remoteWrite:
  - url: "http://10.0.3.115:9090/api/v1/write"
    writeRelabelConfigs:
      # Keep cluster label
      - targetLabel: cluster
        replacement: "stress-tests-eks"

      # Rewrite exported_* labels
      - sourceLabels: [exported_namespace]
        targetLabel: namespace
        action: replace
      - sourceLabels: [exported_pod]
        targetLabel: pod
        action: replace
      - sourceLabels: [exported_container]
        targetLabel: container
        action: replace

      # Drop leftovers
      - regex: "exported_.*"
        action: labeldrop

      # Normalize kubelet -> unified job
      - sourceLabels: [job]
        regex: "kubelet"
        targetLabel: job
        replacement: "kubernetes-metrics"

      # Normalize kube-state-metrics -> unified job
      - sourceLabels: [job]
        regex: "kube-state-metrics"
        targetLabel: job
        replacement: "kubernetes-metrics"

      #       
      - sourceLabels: [job]
        regex: "monitoring/node-exporter-pods"
        targetLabel: job
        replacement: "node-exporter"


---
# ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-agent
  namespace: monitoring

---
# ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus-agent-scrape
rules:
  - apiGroups: [""]
    resources: [nodes, nodes/proxy, services, endpoints, pods, namespaces]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: [nodes/metrics, nodes/stats, nodes/log, nodes/spec]
    verbs: ["get", "list", "watch"]
  - nonResourceURLs:
      - /metrics
      - /metrics/cadvisor
      - /metrics/resource
    verbs: ["get"]
  - apiGroups: ["extensions", "networking.k8s.io"]
    resources: [ingresses]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["monitoring.coreos.com"]
    resources: [servicemonitors, podmonitors, prometheusrules, probes]
    verbs: ["get", "list", "watch"]

---
# ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-agent-scrape
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-agent-scrape
subjects:
  - kind: ServiceAccount
    name: prometheus-agent
    namespace: monitoring

---
# ServiceMonitor for kubelet + cadvisor + resource
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: kubelet-metrics
  namespace: monitoring
  labels:
    release: prometheus-agent
spec:
  selector:
    matchLabels:
      k8s-app: kubelet
  namespaceSelector:
    matchNames: [kube-system]
  endpoints:
    - port: https-metrics
      scheme: https
      interval: 15s
      bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
      tlsConfig: { insecureSkipVerify: true }
    - port: https-metrics
      path: /metrics/cadvisor
      scheme: https
      interval: 15s
      bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
      tlsConfig: { insecureSkipVerify: true }
    - port: https-metrics
      path: /metrics/resource
      scheme: https
      interval: 15s
      bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
      tlsConfig: { insecureSkipVerify: true }
      metricRelabelings:
      - sourceLabels: [id]
        regex: '.+pod([^/]+)'
        targetLabel: pod
      - sourceLabels: [id]
        regex: '.+container([^/]+)'
        targetLabel: container
      - sourceLabels: [id]
        regex: '.+slice/([^/]+)$'
        targetLabel: container_id

---
# ServiceMonitor for kube-state-metrics
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: kube-state-metrics
  namespace: monitoring
  labels:
    release: prometheus-agent
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-state-metrics
  namespaceSelector:
    matchNames: [kube-system]
  endpoints:
    - port: http
      interval: 15s
      path: /metrics

---
# PodMonitor for node-exporter
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  name: node-exporter-pods
  namespace: monitoring
  labels:
    release: prometheus-agent
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus-node-exporter
  namespaceSelector:
    matchNames: [monitoring]
  podMetricsEndpoints:
    - port: metrics
      interval: 15s
      path: /metrics

---
# ServiceMonitor for API server
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: apiserver
  namespace: monitoring
  labels:
    release: prometheus-agent
spec:
  selector:
    matchLabels:
      component: apiserver
  namespaceSelector:
    matchNames: [default, kube-system]
  endpoints:
    - port: https
      scheme: https
      interval: 15s
      bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
      tlsConfig:
        caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecureSkipVerify: false
---