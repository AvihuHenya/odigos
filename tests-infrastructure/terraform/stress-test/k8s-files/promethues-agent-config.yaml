apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-agent-config
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      scrape_timeout: 10s

    scrape_configs:
      # --- Node metrics: scrape the Helm node-exporter Service ---
      - job_name: 'node-exporter'
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          # only from the monitoring namespace
          - source_labels: [__meta_kubernetes_namespace]
            action: keep
            regex: monitoring
          # keep Services that are node-exporter from the Helm chart
          - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name]
            action: keep
            regex: prometheus-node-exporter
          # keep the metrics port (chart uses 'metrics' or 'http-metrics')
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: (metrics|http-metrics)

      # --- Pod metrics: opt-in via annotations on your pods ---
      # Add annotations like:
      #   prometheus.io/scrape: "true"
      #   prometheus.io/port:   "8080"
      #   prometheus.io/path:   "/metrics"
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: "true"
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            target_label: __address__
            regex: (.+?)(?::\d+)?;(\d+)
            replacement: $1:$2
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)

    # --- Ship everything to your EC2 Prometheus receiver ---
    remote_write:
      - url: "http://13.217.3.184:9090/api/v1/write"
        queue_config:
          capacity: 10000
          max_shards: 10
          min_backoff: 1s
          max_backoff: 10s
