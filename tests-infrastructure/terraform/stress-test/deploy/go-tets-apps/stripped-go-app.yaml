apiVersion: v1
kind: ConfigMap
metadata:
  name: go-src
  namespace: load-test
data:
  go.mod: |
    module example.com/odigos-go
    go 1.22
    require github.com/gin-gonic/gin v1.10.0
  main.go: |
    package main
    import (
      "fmt"
      "net/http"
      "os"
      "github.com/gin-gonic/gin"
    )
    func main() {
      r := gin.New()
      r.Use(gin.Recovery())
      fw := "gin"; hn, _ := os.Hostname()
      r.GET("/api/success", func(c *gin.Context){ c.Data(200,"text/plain",[]byte(fmt.Sprintf("success %s %s\n",fw,hn))) })
      r.GET("/api/error", func(c *gin.Context){ c.Data(500,"text/plain",[]byte(fmt.Sprintf("error %s %s\n",fw,hn))) })
      r.NoRoute(func(c *gin.Context){ c.String(http.StatusNotFound,"not found\n") })
      _ = r.Run("0.0.0.0:8080")
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stripped-go-app
  namespace: load-test
  labels:
    app: app-go
    framework: gin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app-go
      odigos-target: "true"
  template:
    metadata:
      labels:
        app: app-go
        framework: gin
        odigos-target: "true"
    spec:
      terminationGracePeriodSeconds: 0
      initContainers:
        - name: copy-src
          image: busybox:1.36
          command: ["sh","-c"]
          args: ["mkdir -p /work && cp -a /src/. /work/"]
          volumeMounts:
            - name: src
              mountPath: /src
            - name: workdir
              mountPath: /work
      containers:
        - name: go
          image: golang:1.22-alpine
          workingDir: /work
          ports:
            - containerPort: 8080
          command: ["sh","-c"]
          args: ["go mod tidy && go run ."]
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              cpu: 750m
              memory: 512Mi
          volumeMounts:
            - name: workdir
              mountPath: /work
      volumes:
        - name: src
          configMap:
            name: go-src
        - name: workdir
          emptyDir: {}